name: Hugo CICD

on:
  push:
    branches:
      - master 
      - Tenzing_temp
  pull_request:
    branches:
      - master
  workflow_run: 
    workflows: ["Daily Tenzing Update"]
    types:
      - completed    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      BRANCH_TO_CHECKOUT: master
      HUGO_VERSION: "0.123.3"
      HUGO_EXTENDED: true
      PYTHON_VERSION: "3.11"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0
          ref: ${{ env.BRANCH_TO_CHECKOUT }}

      # Always use Tenzing from Tenzing_temp branch, as that will be most recent
      - name: Script - Checkout specific file from Tenzing_temp
        run: |
          git fetch origin Tenzing_temp:content/contributors/tenzing.md --depth=1
          git checkout FETCH_HEAD -- content/contributors/tenzing.md

      - name: Hugo - Setup
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: ${{ env.HUGO_EXTENDED }}

      - name: Python - Setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # - name: Python - Upgrade pip
      #   run: |
      #     # install pip=>20.1 to use "pip cache dir"
      #     python3 -m pip install --upgrade pip

      # - name: Script - Get pip cache dir
      #   id: pip-cache
      #   run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Script - Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir) >> $GITHUB_OUTPUT"

      - name: Cache - Pip Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-doc.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Python - Install dependencies
        run: |
          python3 -m pip install -r ./requirements.txt

      # - name: Delete curated_resources
      #   run: |
      #     rm content/curated_resources/[0-9]*.md

      - name: Python - Run and create curated_resources
        run: |
          python3 content/resources/resource.py

      - name: Hugo - Build
        run: hugo --gc --minify --cleanDestinationDir --destination public

      - name: Upload Artifact - Website
        uses: actions/upload-artifact@v4
        with:
          name: forrt-website-${{ github.run_number }}
          path: public/
          retention-days: 1

  deploy-prod:
    runs-on: ubuntu-22.04
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/Tenzing_temp') && github.event.repository.fork == false
    env:
      CNAME: forrt.org
    steps:
      - name: Download Arfifact - Website
        uses: actions/download-artifact@v4
        with:
          name: forrt-website-${{ github.run_number }}
          path: ${{ github.repository }}/forrt-website
      - name: Deploy - GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ github.repository }}/forrt-website
          publish_branch: gh-pages
          cname: ${{ env.CNAME }}
